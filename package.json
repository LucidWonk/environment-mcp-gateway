{
  "name": "lucidwonks-environment-mcp-gateway",
  "version": "1.0.0",
  "description": "MCP Gateway for Lucidwonks Development Environment",
  "main": "dist/server.js",
  "type": "module",
  "engines": {
    "node": ">=20.0.0"
  },
  "scripts": {
    "build": "tsc",
    "dev": "echo 'üê≥ MCP server is container-only. Use: docker-compose up -d environment-mcp-gateway' && echo 'üìã For local dev: FORCE_LOCAL_MCP=true npm run dev:local'",
    "dev:local": "tsx watch src/server.ts",
    "dev:force": "FORCE_LOCAL_MCP=true tsx watch src/server.ts",
    "start": "node dist/server.js",
    "start:container": "CONTAINER=true node dist/server.js",
    "docker:build": "cd docker && docker-compose build environment-mcp-gateway",
    "docker:up": "cd docker && docker-compose up -d environment-mcp-gateway",
    "docker:down": "cd docker && docker-compose down environment-mcp-gateway",
    "docker:logs": "cd docker && docker-compose logs -f environment-mcp-gateway",
    "docker:health": "curl -s http://localhost:3002/health | jq . || curl -s http://localhost:3002/health",
    "docker:status": "cd docker && docker-compose ps environment-mcp-gateway",
    "stop": "./stop-mcp.sh",
    "lint": "echo 'TypeScript linting via tsc build check'",
    "test": "echo 'TypeScript tests are handled by XUnit in EnvironmentMCPGateway.Tests project'",
    "clean": "rm -rf dist && rm -f .mcp-server.pid",
    "reset": "./stop-mcp.sh && npm run clean && rm -rf node_modules package-lock.json && npm install"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.0.1",
    "winston": "^3.8.2",
    "winston-daily-rotate-file": "^4.7.1"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "tsx": "4.20.5",
    "typescript": "^5.6.3"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "development-environment",
    "trading-platform"
  ],
  "author": "Lucidwonks Development Team",
  "license": "MIT"
}
